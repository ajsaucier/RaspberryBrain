#ifndef IMAGES_H
#define IMAGES_H

/* -----------------------------------------------------------------------------------------------------------------------------
 *  Retrieve the width of an image.
 * -----------------------------------------------------------------------------------------------------------------------------
 */
unsigned char getImageWidth(const byte *image) {
  
  return pgm_read_byte(image);
  
}
  
  
/* -----------------------------------------------------------------------------------------------------------------------------
 *  Retrieve the height of an image.
 * -----------------------------------------------------------------------------------------------------------------------------
 */
 unsigned char getImageHeight(const byte *image) {

  return pgm_read_byte(image + 1);

}

// Introduction page

const unsigned char PROGMEM intro[] =
{
// width, height,
128, 64,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x80, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x00, 0x80, 0x80, 0x80, 0x80, 0x00, 0x00, 0x00, 0x00, 0x80, 0x80, 0x80, 0x80, 0x00, 0x00, 0x00, 0x00, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x00, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x00, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x00, 0x80, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x31, 0x71, 0x71, 0x8f, 0x8f, 0x00, 0x80, 0xe0, 0x78, 0x7e, 0x67, 0x61, 0x67, 0x7e, 0x78, 0xe0, 0x80, 0x00, 0x9f, 0x9f, 0x99, 0x99, 0x99, 0xf9, 0xf9, 0x00, 0xff, 0xff, 0x31, 0x31, 0x1b, 0x1f, 0x06, 0x00, 0xff, 0xff, 0x8d, 0x8d, 0xcf, 0xff, 0x3c, 0x00, 0xff, 0xff, 0x99, 0x99, 0x81, 0x81, 0x00, 0xff, 0xff, 0x31, 0x71, 0x71, 0x8f, 0x8f, 0x00, 0xff, 0xff, 0x31, 0x71, 0x71, 0x8f, 0x8f, 0x00, 0x01, 0x03, 0x07, 0x0e, 0xfc, 0xfc, 0x0e, 0x07, 0x03, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x20, 0x10, 0x08, 0x88, 0x48, 0x48, 0x48, 0x48, 0x88, 0xc4, 0x22, 0x12, 0x12, 0x32, 0x52, 0x22, 0xc4, 0x88, 0x82, 0x80, 0x80, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf5, 0xf5, 0xb4, 0xb4, 0xe4, 0xe5, 0x85, 0x04, 0xf5, 0xf5, 0x34, 0x34, 0x34, 0xf4, 0xf4, 0x04, 0x04, 0x05, 0x05, 0xc4, 0xf5, 0x35, 0xf5, 0xc5, 0x05, 0x05, 0x05, 0x04, 0xf5, 0xf5, 0x04, 0xf4, 0xf4, 0x64, 0xe4, 0x84, 0xf5, 0xf5, 0x05, 0x05, 0x04, 0x04, 0x04, 0x04, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x04, 0x05, 0x05, 0x04, 0x04, 0x04, 0x05, 0x85, 0x44, 0x25, 0x25, 0x24, 0x24, 0x24, 0x25, 0x25, 0x24, 0x24, 0x24, 0x44, 0x84, 0x05, 0x05, 0x04, 0x04, 0x04, 0x04, 0x80, 0x40, 0x20, 0x10, 0x08, 0x04, 0xe3, 0x10, 0x80, 0x4f, 0x50, 0xe0, 0xa0, 0x61, 0x22, 0x10, 0x3f, 0x42, 0x81, 0x81, 0x85, 0x89, 0x42, 0xbd, 0x40, 0x40, 0x42, 0xc4, 0x21, 0x3e, 0x40, 0x80, 0x00, 0x00, 0x00, 0x42, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0x3f, 0x31, 0x31, 0x19, 0x1f, 0x07, 0x00, 0x3f, 0x3f, 0x06, 0x0e, 0x0e, 0x31, 0x31, 0x00, 0x30, 0x3c, 0x0f, 0x0f, 0x0c, 0x0c, 0x0c, 0x0f, 0x0f, 0x3c, 0x30, 0x00, 0x3f, 0x3f, 0x00, 0x3f, 0x3f, 0x00, 0x01, 0x07, 0x3f, 0x3f, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x03, 0x05, 0x09, 0x09, 0x11, 0x22, 0x44, 0x48, 0x48, 0x48, 0x48, 0x49, 0x49, 0x49, 0x29, 0x29, 0x29, 0x28, 0x28, 0x28, 0x24, 0x42, 0x82, 0x01, 0x00, 0x03, 0x04, 0x08, 0x68, 0x9f, 0x08, 0x10, 0x90, 0xf1, 0x12, 0x18, 0x27, 0xa0, 0x20, 0x21, 0xf2, 0x8f, 0x08, 0x18, 0x24, 0x8b, 0x78, 0x04, 0x03, 0x40, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x02, 0x04, 0x04, 0x04, 0x04, 0x04, 0x09, 0x11, 0x10, 0x11, 0x12, 0x14, 0x14, 0x14, 0x15, 0x12, 0x09, 0x08, 0x85, 0x21, 0x01, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0xf0, 0x08, 0xe4, 0x94, 0x94, 0x94, 0xe4, 0x08, 0xf0, 0x00, 0x00, 0xf0, 0x90, 0x90, 0x90, 0x00, 0x10, 0x10, 0xf0, 0x10, 0x10, 0x00, 0xf0, 0x90, 0x90, 0x90, 0xf0, 0x00, 0xf0, 0x10, 0x10, 0x10, 0xe0, 0x00, 0x10, 0x10, 0xf0, 0x10, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf0, 0x08, 0xf4, 0x54, 0x54, 0x54, 0xf4, 0x08, 0xf0, 0x00, 0x00, 0xf0, 0x90, 0x90, 0x90, 0x00, 0xe0, 0x10, 0x10, 0x10, 0x10, 0xe0, 0x00, 0xf0, 0x00, 0x00, 0x00, 0xf0, 0x00, 0xf0, 0x20, 0x40, 0x80, 0x00, 0xf0, 0x00, 0xf0, 0x10, 0x10, 0x10, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x02, 0x05, 0x04, 0x04, 0x04, 0x05, 0x02, 0x01, 0x00, 0x00, 0x04, 0x04, 0x04, 0x07, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x07, 0x00, 0x07, 0x01, 0x01, 0x03, 0x04, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x02, 0x05, 0x05, 0x05, 0x05, 0x05, 0x02, 0x01, 0x00, 0x00, 0x04, 0x04, 0x04, 0x07, 0x00, 0x03, 0x04, 0x04, 0x04, 0x04, 0x03, 0x00, 0x03, 0x04, 0x04, 0x04, 0x03, 0x00, 0x07, 0x00, 0x00, 0x00, 0x01, 0x07, 0x00, 0x07, 0x04, 0x04, 0x04, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
};

// Sound off

const unsigned char PROGMEM sound_off[] =
{
// width, height,
18, 8,
0x7c, 0x82, 0x82, 0x82, 0x82, 0x7c, 0x00, 0xfe, 0x12, 0x12, 0x12, 0x02, 0x00, 0xfe, 0x12, 0x12, 0x12, 0x02, 
};

// Sound on

const unsigned char PROGMEM sound_on[] =
{
// width, height,
18, 8,
0x7c, 0x82, 0x82, 0x82, 0x82, 0x7c, 0x00, 0xfe, 0x04, 0x08, 0x10, 0x20, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x00, 
};

// Player raspberry

const unsigned char PROGMEM raspberry[] =
{
// width, height,
16, 16,
0x00, 0x00, 0xd8, 0x1c, 0xdc, 0xc0, 0x1c, 0xdc, 0xc0, 0x1c, 0xdc, 0xc0, 0x1c, 0xd8, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x06, 0x0d, 0x01, 0x1c, 0x1d, 0x01, 0x1c, 0x1d, 0x01, 0x06, 0x00, 0x00, 0x00, 
};

// Synapse

const unsigned char PROGMEM synapse[] =
{
// width, height,
8, 8,
0x49, 0x2a, 0x1c, 0xff, 0x38, 0x54, 0x92, 0x11, 
};

// Backgrounds

const unsigned char PROGMEM brainBg[] =
{
// width, height,
32, 32,
0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x40, 0x20, 0x20, 0x20, 0x40, 0x80, 0x00, 0x80, 0x40, 0x40, 0x40, 0x40, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x07, 0x08, 0x10, 0x20, 0x42, 0x24, 0x18, 0x20, 0x41, 0x42, 0x42, 0x46, 0x20, 0x10, 0x28, 0x41, 0x82, 0x04, 0x0a, 0x19, 0x01, 0x81, 0x41, 0x22, 0x1c, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x80, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x0c, 0x12, 0x21, 0x21, 0x23, 0x24, 0x20, 0x11, 0x0e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
};

const unsigned char PROGMEM borderTop[] =
{
// width, height,
32, 8,
0x7f, 0x7f, 0x3f, 0x1f, 0x2f, 0x6f, 0x7f, 0x7f, 0x3f, 0x1f, 0x2f, 0x6f, 0x7f, 0x7f, 0x3f, 0x1f, 0x2f, 0x6f, 0x7f, 0x7f, 0x3f, 0x1f, 0x2f, 0x6f, 0x7f, 0x7f, 0x3f, 0x1f, 0x2f, 0x6f, 0x7f, 0x7f, 
};

const unsigned char PROGMEM borderBottom[] =
{
// width, height,
32, 8,
0xfe, 0xfe, 0xf6, 0xf4, 0xf8, 0xfc, 0xfe, 0xfe, 0xf6, 0xf4, 0xf8, 0xfc, 0xfe, 0xfe, 0xf6, 0xf4, 0xf8, 0xfc, 0xfe, 0xfe, 0xf6, 0xf4, 0xf8, 0xfc, 0xfe, 0xfe, 0xf6, 0xf4, 0xf8, 0xfc, 0xfe, 0xfe, 
};

// Brain matter obstacles

const unsigned char PROGMEM matterSmall[] =
{
// width, height,
8, 16,
0x00, 0xdc, 0x3e, 0xfe, 0xfe, 0xce, 0xb8, 0x00, 
0x00, 0x1d, 0x73, 0x7f, 0x7f, 0x7c, 0x3b, 0x00, 
};

const unsigned char PROGMEM matterMedium[] =
{
// width, height,
8, 24,
0x00, 0xdc, 0x3e, 0xfe, 0xfe, 0xce, 0xb8, 0x00, 
0x00, 0xdd, 0x33, 0xff, 0xff, 0xcc, 0xbb, 0x00, 
0x00, 0x1d, 0x73, 0x7f, 0x7f, 0x7c, 0x3b, 0x00, 
};

const unsigned char PROGMEM matterLarge[] =
{
// width, height,
8, 32,
0x00, 0xdc, 0x3e, 0xfe, 0xfe, 0xce, 0xb8, 0x00, 
0x00, 0xdd, 0x33, 0xff, 0xff, 0xcc, 0xbb, 0x00, 
0x00, 0xdd, 0x33, 0xff, 0xff, 0xcc, 0xbb, 0x00, 
0x00, 0x1d, 0x73, 0x7f, 0x7f, 0x7c, 0x3b, 0x00, 
};


#endif
